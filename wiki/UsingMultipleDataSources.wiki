#summary How to use more than one database in your Wheels app.
#labels chapter

_*Note:* This wiki contains "bleeding edge" documentation, which may reflect a future version of Wheels. Entries in the wiki may also be incomplete and unedited. For the "official" documentation, please visit [http://www.cfwheels.com/docs Official ColdFusion on Wheels Documentation]._

Sometimes you need to pull data from more than one database, whether it's by choice (for performance or security reasons, perhaps) or it's just because that's the way your infrastructure is set up.

Wheels has built-in functionality for this so that you don't have to revert back to writing the queries and setting the data source manually whenever you need to use a data source other than the default one.

==Configuring the Data Sources==

If you need to use more than one database, there are 2 ways to accomplish this in Wheels. You can either set it globally by using the `config/database.cfm` file, or you can specify it on a per model basis by using the following functions in the `init` function in your model file:

 * [setDataSource setDataSource()]
 * [setCreateDataSource setCreateDataSource()]
 * [setReadDataSource setReadDataSource()]
 * [setUpdateDataSource setUpdateDataSource()]
 * [setDeleteDataSource setDeleteDataSource()]

As you have probably figured out by reading the functions' names, you can have Wheels use one data source for all SQL operations by using the [setDataSource setDataSource()] function.

Or you can have it read from one database and write to another, for example by using the [setDataSource setDataSource()] function to specify what data source to use when reading and by using the remaining 3--[setCreateDataSource setCreateDataSource()], [setUpdateDataSource setUpdateDataSource()], [setDeleteDataSource setDeleteDataSource()]--to specify what data source to use when writing.

==Minor Caveat: Create Data Source Also Reads After `INSERT`==

What data source Wheels will use internally for each operation is not solely decided by whether it's a `SELECT`, `INSERT`, `UPDATE` or `DELETE` statement though. Instead, it's decided by the current context of the operation.

For example, if you insert a new record to a table using one data source, Wheels will use that same data source when getting back the primary key of the record you just inserted. Keep this in mind when setting access permissions on your tables.